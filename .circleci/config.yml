version: 2.1

commands:
  auth-regress:
    description: "run one auth regression context"
    parameters:
      skip:
        type: string
        default: ""
      context:
        type: string
        default: ""
    steps:
      - run: |
          cd regression-tests
          [ -e ./vars ] && . ./vars
          rm -rf tests/*/skip
          for t in << parameters.skip >>
          do
            touch tests/$t/skip
          done
          ./start-test-stop 5300 << parameters.context >>

  install-recursor-deps:
    description: "Install all libraries needed for the recursor"
    steps:
      - run: apt-get update
      - run:
          command: |
            apt-get install -qq -y \
              libluajit-5.1 \
              libboost-all-dev \
              libcap2 \
              libssl1.1 \
              libsystemd0 \
              libsodium18 \
              libprotobuf10

  add-auth-repo:
    description: "Add the debian repo for the auth"
    parameters:
      version:
        type: string
        default: "42"
      distro:
        type: string
        default: "debian"
      release:
        type: string
        default: "stretch"
    steps:
      - run:
          name: "Install dependencies"
          command: "apt-get update && apt-get install -qq -y curl gnupg2"
      - run:
          name: "Install apt-keys"
          command: |
            if [ "<< parameters.version >>" = "master" ]; then
              curl https://repo.powerdns.com/CBC8B383-pub.asc | apt-key add -
            else
              curl https://repo.powerdns.com/FD380FBB-pub.asc | apt-key add -
            fi
      - run:
          name: "Add repository"
          command: |
            echo 'deb [arch=amd64] http://repo.powerdns.com/<< parameters.distro >> << parameters.release >>-auth-<< parameters.version>> main' >> /etc/apt/sources.list.d/pdns.list
      - run:
          name: "add pinning"
          command: |
            echo 'Package: pdns-*' > /etc/apt/preferences.d/pdns
            echo 'Pin: origin repo.powerdns.com' >> /etc/apt/preferences.d/pdns
            echo 'Pin-Priority: 600' >> /etc/apt/preferences.d/pdns
      - run:
          name: update apt cache
          command: apt-get update

jobs:
  build-auth:
    docker:
      - image: debian:stretch
      - image: mcr.microsoft.com/mssql/server:2019-CTP2.2-ubuntu
        environment:
          - ACCEPT_EULA: Y
          - SA_PASSWORD: 'SAsa12%%'

    steps:
      - checkout

      - run:
          name: install dependencies
          command: ./build-scripts/circleci.sh debian-stretch-deps

      - run:
          name: autoconf
          command: autoreconf -vfi

      - run:
          name: configure
          command: ./configure --disable-lua-records --with-modules='bind gmysql godbc random'

      - run:
          name: build
          command: make -j3 -k

      - run:
          name: test gsqlite3 odbc
          command: ./build-scripts/circleci.sh configure-odbc-sqlite; cd regression-tests ; touch tests/verify-dnssec-zone/allow-missing ; GODBC_SQLITE3_DSN=pdns-sqlite3-1 ./start-test-stop 5300 godbc_sqlite3-nsec3

      - run:
          name: set up mssql odbc
          command: ./build-scripts/circleci.sh configure-odbc-mssql ; echo 'create database pdns' | isql -v pdns-mssql-docker-nodb sa SAsa12%%

      - run:
          name: set up mssql odbc testing
          command: |
            cd regression-tests
            echo 'export GODBC_MSSQL_PASSWORD=SAsa12%% GODBC_MSSQL_USERNAME=sa GODBC_MSSQL_DSN=pdns-mssql-docker' > ./vars

      - auth-regress:
          context: godbc_mssql-nodnssec
          skip: 8bit-txt-unescaped
      - auth-regress:
          context: godbc_mssql
          skip: 8bit-txt-unescaped
      - auth-regress:
          context: godbc_mssql-nsec3
          skip: 8bit-txt-unescaped
      - auth-regress:
          context: godbc_mssql-nsec3-optout
          skip: 8bit-txt-unescaped verify-dnssec-zone
      - auth-regress:
          context: godbc_mssql-nsec3-narrow
          skip: 8bit-txt-unescaped

  build-recursor:
    docker:
      - image: debian:stretch
    steps:
      - run:
          name: Install dependencies
          command: |
            apt-get update && apt-get -qq --no-install-recommends install \
            autoconf \
            automake \
            ca-certificates \
            curl \
            bison \
            flex \
            g++ \
            git \
            libboost-all-dev \
            libcap-dev \
            libluajit-5.1-dev \
            libprotobuf-dev \
            libsodium-dev \
            libssl-dev \
            libsystemd-dev \
            libtool \
            make \
            pkg-config \
            protobuf-compiler \
            ragel \
            virtualenv
      - checkout
      - run:
          name: autoconf
          command: autoreconf -vfi
          working_directory: ~/project/pdns/recursordist
      - run:
          name: configure
          command: |
            CFLAGS="-O1 -Werror=vla" \
            CXXFLAGS="-O1 -Werror=vla" \
            ./configure \
            --enable-unit-tests \
            --prefix=/opt/pdns-recursor \
            --with-libsodium \
            --with-lua=luajit \
            --with-libcap \
            --with-protobuf=yes \
            --without-net-snmp
          working_directory: ~/project/pdns/recursordist
      - run:
          name: build
          command: make -j3 -k
          working_directory: ~/project/pdns/recursordist
      - run:
          name: Run unit tests
          command: make check || (cat test-suite.log; false)
          working_directory: ~/project/pdns/recursordist
      - run:
          name: Install resulting binaries
          command: make install
          working_directory: ~/project/pdns/recursordist
      - persist_to_workspace:
          root: /opt
          paths:
            - pdns-recursor

  test-recursor-regression:
    docker:
      - image: debian:stretch
    steps:
      - add-auth-repo
      - run: apt-get --no-install-recommends install -qq -y pdns-server pdns-backend-bind pdns-tools daemontools authbind jq libfaketime lua-posix moreutils bc virtualenv protobuf-compiler
      - install-recursor-deps
      - run:
          name: Set up authbind
          command: |
            touch /etc/authbind/byport/53
            chmod 755 /etc/authbind/byport/53
      - checkout
      - attach_workspace:
          at: /opt
      - run:
          name: Run regression tests
          workdir: ~/project
          command: |
            PDNSRECURSOR=/opt/pdns-recursor/sbin/pdns_recursor \
            RECCONTROL=/opt/pdns-recursor/bin/rec_control \
            ./build-scripts/test-recursor

  test-recursor-bulk:
    docker:
      - image: debian:stretch
    steps:
      - add-auth-repo
      - run: apt-get --no-install-recommends install -qq -y pdns-tools moreutils time
      - install-recursor-deps
      - checkout
      - attach_workspace:
          at: /opt
      - run:
          name: Get the majestic million list
          workdir: ~/project/regression-tests
          command: |
            apt-get install -qq -y unzip && \
            curl -LO http://s3-us-west-1.amazonaws.com/umbrella-static/top-1m.csv.zip && \
            unzip top-1m.csv.zip -d .
      - run:
          name: Run bulktests
          command: |
            DNSBULKTEST=/usr/bin/dnsbulktest \
            RECURSOR=/opt/pdns-recursor/sbin/pdns_recursor \
            THRESHOLD=95 \
            TRACE=no \
            ./timestamp ./recursor-test 5300 50000 || \
            (cat recursor.log; false)
          workdir: ~/project/regression-tests

workflows:
  version: 2
  build-and-test-all:
    jobs:
      - build-auth

      - build-recursor
      - test-recursor-regression:
          requires:
            - build-recursor
      - test-recursor-bulk:
          requires:
            - build-recursor
